// Generated by deploy script
import { type Abi } from 'viem'

export type FitFiConfig = {
  address: `0x${string}`;
  abi: Abi;
}

export type FitFiFunctions = {
  ADMIN_FEE_BPS(): Promise<bigint>;
  activityValidator(): Promise<string>;
  calculateRewards(poolId: bigint, user: string): Promise<bigint>;
  closePool(poolId: bigint): Promise<void>;
  createPool(startTime: bigint, duration: bigint): Promise<void>;
  deposit(poolId: bigint, amount: bigint): Promise<void>;
  depositToken(): Promise<string>;
  getPoolTotalActivityPoints(poolId: bigint): Promise<bigint>;
  getPoolTotalDeposits(poolId: bigint): Promise<bigint>;
  getUserActivityPoints(poolId: bigint, user: string): Promise<bigint>;
  getUserDeposit(poolId: bigint, user: string): Promise<bigint>;
  owner(): Promise<string>;
  poolCounter(): Promise<bigint>;
  pools(poolId: bigint): Promise<bigint | bigint | bigint | bigint | boolean>;
  renounceOwnership(): Promise<void>;
  submitActivity(poolId: bigint, proof: any, nearbyUsers: string[], proximityProofs: string[]): Promise<void>;
  totalActivityPoints(poolId: bigint): Promise<bigint>;
  transferOwnership(newOwner: string): Promise<void>;
  userMultipliers(poolId: bigint, user: string): Promise<bigint>;
  withdraw(poolId: bigint): Promise<void>;
  yieldProtocol(): Promise<string>;
}

export type FitFiEvents = {
  ActivitySubmitted: {
    poolId: bigint;
    user: `0x${string}`;
    points: bigint;
  };
  Deposited: {
    poolId: bigint;
    user: `0x${string}`;
    amount: bigint;
  };
  MultiplierApplied: {
    poolId: bigint;
    users: `0x${string}`[];
    multiplier: bigint;
  };
  OwnershipTransferred: {
    previousOwner: `0x${string}`;
    newOwner: `0x${string}`;
  };
  PoolCreated: {
    poolId: bigint;
    startTime: bigint;
    endTime: bigint;
  };
  RewardsClaimed: {
    poolId: bigint;
    user: `0x${string}`;
    amount: bigint;
  };
  Withdrawn: {
    poolId: bigint;
    user: `0x${string}`;
    principal: bigint;
    rewards: bigint;
  };
}
